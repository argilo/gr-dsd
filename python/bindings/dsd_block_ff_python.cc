/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(dsd_block_ff.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(85ec152704b38abfa2331b649327b3e6)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <dsd/dsd_block_ff.h>
// pydoc.h is automatically generated in the build directory
#include <dsd_block_ff_pydoc.h>

void bind_dsd_block_ff(py::module& m)
{

    using dsd_block_ff    = ::gr::dsd::dsd_block_ff;


    py::class_<dsd_block_ff, gr::sync_decimator,
        std::shared_ptr<dsd_block_ff>>(m, "dsd_block_ff", D(dsd_block_ff))

        .def(py::init(&dsd_block_ff::make),
           py::arg("frame"),
           py::arg("mod"),
           py::arg("uvquality"),
           py::arg("errorbars"),
           py::arg("verbosity"),
           D(dsd_block_ff,make)
        )
        



        ;

    py::enum_<::gr::dsd::dsd_frame_mode>(m,"dsd_frame_mode")
        .value("dsd_FRAME_AUTO_DETECT", ::gr::dsd::dsd_FRAME_AUTO_DETECT) // 0
        .value("dsd_FRAME_P25_PHASE_1", ::gr::dsd::dsd_FRAME_P25_PHASE_1) // 1
        .value("dsd_FRAME_DSTAR", ::gr::dsd::dsd_FRAME_DSTAR) // 2
        .value("dsd_FRAME_NXDN48_IDAS", ::gr::dsd::dsd_FRAME_NXDN48_IDAS) // 3
        .value("dsd_FRAME_NXDN96", ::gr::dsd::dsd_FRAME_NXDN96) // 4
        .value("dsd_FRAME_PROVOICE", ::gr::dsd::dsd_FRAME_PROVOICE) // 5
        .value("dsd_FRAME_DMR_MOTOTRBO", ::gr::dsd::dsd_FRAME_DMR_MOTOTRBO) // 6
        .value("dsd_FRAME_X2_TDMA", ::gr::dsd::dsd_FRAME_X2_TDMA) // 7
        .export_values()
    ;

    py::implicitly_convertible<int, ::gr::dsd::dsd_frame_mode>();
    py::enum_<::gr::dsd::dsd_modulation_optimizations>(m,"dsd_modulation_optimizations")
        .value("dsd_MOD_AUTO_SELECT", ::gr::dsd::dsd_MOD_AUTO_SELECT) // 0
        .value("dsd_MOD_C4FM", ::gr::dsd::dsd_MOD_C4FM) // 1
        .value("dsd_MOD_GFSK", ::gr::dsd::dsd_MOD_GFSK) // 2
        .value("dsd_MOD_QPSK", ::gr::dsd::dsd_MOD_QPSK) // 3
        .export_values()
    ;

    py::implicitly_convertible<int, ::gr::dsd::dsd_modulation_optimizations>();



}








